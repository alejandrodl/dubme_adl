Metadata-Version: 2.1
Name: dubme-adl
Version: 0.0.0
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: matplotlib
Requires-Dist: ffmpeg
Requires-Dist: moviepy
Requires-Dist: soundfile
Requires-Dist: pesq
Requires-Dist: pystoi
Requires-Dist: openai-whisper
Requires-Dist: torchvision
Requires-Dist: torchaudio
Provides-Extra: code-style
Requires-Dist: black>=22.9.0; extra == "code-style"
Requires-Dist: flake8>=5; extra == "code-style"
Provides-Extra: tests
Requires-Dist: pytest; extra == "tests"
Provides-Extra: type-check
Requires-Dist: mypy==1.1.1; extra == "type-check"
Requires-Dist: pydantic>=1.10; extra == "type-check"
Requires-Dist: types-tqdm; extra == "type-check"

# Dubme Assignment - Alejandro Delgado


# Development
## Quick Start
Create `conda` environment:
```sh
conda env create -f environment/[op_system].yml
```

## Dependencies
### conda
We use `conda` to handle python dependencies, the default `conda` environment creation is currently supported for 64-bit Linux operating system.  To create or update an environment:

```sh
conda env update -f environment/[op_system].yml
```

All dependencies are either handled by `conda` or by `pip` via `conda`. The `pip` dependencies are all listed in the `pyproject.toml` file.

## Code Quality
### Testing
We use `pytest` for testing, there's no coverage target at the moment but essential functions and custom logic should definitely be tested. To run the tests:
```sh
make tests
```

### Code Style
We use `flake8` for linting and `black` for formatting.

```sh
make code-style
```

### Static Typing
We check static types using `mypy`.
```sh
make type-check
```
